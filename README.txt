# üß± Brick Breaker

Um jogo simples de "quebra-blocos" desenvolvido com **Pygame**, onde voc√™ controla uma plataforma e rebate a bola para destruir todos os blocos.

## üéÆ Como jogar

- Use as **setas do teclado (‚Üê ‚Üí)** para mover a plataforma para a esquerda ou direita.
- O objetivo √© **destruir todos os blocos** sem deixar a bola cair.
- Se a bola tocar o fundo da tela, o jogo termina.

## üì¶ Requisitos

Antes de rodar o jogo, instale o Pygame:

```bash
pip install pygame
```

## ‚ñ∂Ô∏è Como executar

Clone este reposit√≥rio e execute o arquivo Python:

```bash
git clone https://github.com/seu-usuario/brick-breaker.git
cd brick-breaker
python main.py
```

> üß† **Dica**: Verifique se o Python est√° instalado corretamente e que voc√™ est√° usando uma vers√£o compat√≠vel com o Pygame (ex: Python 3.8+).

## üõ†Ô∏è Estrutura do Projeto

```
brick-breaker/

-----main.py         
-----README.md  
----images/images/brick-breaker0.png	
----images/images/brick-breaker1.png
	
```


## ‚ú® Funcionalidades

- Movimento suave do jogador
- Detec√ß√£o de colis√£o com blocos e jogador
- Contador de pontua√ß√£o
- Final de jogo quando todos os blocos s√£o destru√≠dos ou a bola cai
- C√≥digo simples e comentado, ideal para iniciantes

## üöß Melhorias futuras (ideias)

- Adicionar sons e m√∫sica de fundo
- Vidas extras
- N√≠veis com dificuldades diferentes
- Power-ups (aumentar plataforma, bola dupla, etc.)

## üì∏ Capturas de Tela

> _Voc√™ pode adicionar imagens aqui, como por exemplo:_
> ![Tela Inicio](images/brick-breaker0.png
>  [Tela com pontua√ß√£o](images/brick-breaker1.png)



---
ste √© um jogo estilo *Brick Breaker* desenvolvido com a biblioteca `pygame` em Python.

## üéÆ Desenvolvimento do Jogo - Passo a Passo

### üõ†Ô∏è 1. Prepara√ß√£o do Ambiente
- Instalei a biblioteca `pygame` usando o comando:
  ```bash
  pip install pygame
  ```
- Inicializei o Pygame com `pygame.init()` e criei a tela do jogo com o tamanho de `800x800`.

### üéÆ 2. Estrutura da Tela
- Defini o t√≠tulo da janela com `pygame.display.set_caption('Brick Breaker')`.
- Criei os principais objetos do jogo usando `pygame.Rect()`:
  - A **bola**: um quadrado branco que se move na tela.
  - O **jogador**: uma barra azul na parte inferior da tela que o jogador controla.
  - Os **blocos**: v√°rios blocos verdes posicionados no topo da tela.

### üß± 3. Gera√ß√£o de Blocos
- Usei uma fun√ß√£o `criar_blocos()` para gerar automaticamente os blocos com base em:
  - Quantidade por linha
  - Quantidade de linhas
  - Dist√¢ncias entre eles
- Os blocos s√£o armazenados em uma lista e desenhados com `pygame.draw.rect()`.

### üïπÔ∏è 4. Controle do Jogador
- Criei a fun√ß√£o `movimentar_jogador()` que verifica se as teclas de seta esquerda/direita foram pressionadas e move a barra azul de acordo.

### ‚öΩ 5. Movimento da Bola
- Desenvolvi a fun√ß√£o `movimentar_bola()` que atualiza a posi√ß√£o da bola com base em sua dire√ß√£o.
- Implementei colis√µes:
  - Com as bordas da tela (rebatendo)
  - Com o jogador (rebatendo)
  - Com os blocos (remo√ß√£o e mudan√ßa de dire√ß√£o)

### üß† 6. L√≥gica de Pontua√ß√£o
- Cada bloco destru√≠do aumenta a pontua√ß√£o.
- Usei a fun√ß√£o `atualizar_pontuacao()` para desenhar o texto da pontua√ß√£o na tela e verificar se todos os blocos foram destru√≠dos.

### üîÅ 7. Loop Principal do Jogo
- Criei um loop `while not fim_jogo:` que:
  - Atualiza a tela com `tela.fill()` e `pygame.display.flip()`
  - Desenha o jogador, bola e blocos
  - Verifica eventos como pressionamento de teclas e encerramento do jogo
  - Atualiza a movimenta√ß√£o da bola e do jogador

### ‚úÖ 8. Finaliza√ß√£o
- Quando a bola cai (sai da tela inferior), o jogo √© encerrado.
- O `pygame.quit()` √© chamado para fechar a janela do jogo corretamente.


Feito com üíô usando [Pygame]
